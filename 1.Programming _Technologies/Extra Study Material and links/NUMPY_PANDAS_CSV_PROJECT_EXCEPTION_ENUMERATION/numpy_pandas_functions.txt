'good' if x >= 8.0 else 'bad'
[x for x in iterable if expression]
{i:j for i.j in (key,value)}
Numpy:
->A grid of values

import numpy
x=np.array([1,2,3])
x.shape
x[0]
x[1]=10
x=np.array([[1,2,3],[1,2,3]])
x[0,0],b[0,1]
x[:2,2:3]
b.shape
x.T
np.zeros((3,3))
np.ones((3,3))
np.full((3,3),5)
np.eye(3)
np.random.random((3,3))
np.empty_like(x)
np.tile(np.array([11,1,1]),(3,1))
Indexing
x[[0, 1, 2], [0, 1, 0]]
np.array([x[0, 0], a[1, 1], a[2, 0]])
b=np.array([0, 2, 0, 1])
x[np.arange(4), b
x[np.arange(4), b] += 2
x > 5
x[x > 5]
x.dtype
np.array([1, 2], dtype=np.int64) 
x + y
x-y
x*y
x/y
np.add(x,y)
np.subtract(x,y)
np.multiply(x,y)
np.divide(x,y)
np.sqrt(x)
np.dot(x,y)
np.sum(x,axis=0)
Broadcasting:
x + y
np.reshape(x, (3, 1))
Pandas:

Read:clean:relation:plot
pd.DataFrame()
df=pd.DataFrame(arg,index=[])
df.loc[:]
df.iloc[1:2]
pd.read_csv()
pd.read_csv(arg,index_col=0)
pd.read_json()
df.to_csv()
df.to_json()
df.head() #5
df.tail()
df.info()
df.shape
df.append(new_df)
df.drop_duplicates(inplace=True)
df.columns
df.rename(columns={old : new})
for col in df:
    col
df.null()
df.isnull.sum()
df.dropna(axis=1)
df.mean()
df.fillna()
df.describe()
df.corr()
df[["name"]]
df[df["name"] == "sid"]
df[df["name"].isin([])]
df["name"].apply()
import matplotlib.pyplot as plt
movies_df.plot(kind='scatter', x='data', y='value', title='')





