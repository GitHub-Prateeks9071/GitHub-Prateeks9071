
SleepModeExtInt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000254  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003fc  08000404  00010404  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003fc  080003fc  00010404  2**0
                  CONTENTS
  4 .ARM          00000000  080003fc  080003fc  00010404  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003fc  08000404  00010404  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003fc  080003fc  000103fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000400  08000400  00010400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010404  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000404  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000404  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010404  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000aba  00000000  00000000  0001042e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000221  00000000  00000000  00010ee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  00011110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000058  00000000  00000000  00011180  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001ca8  00000000  00000000  000111d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000006a0  00000000  00000000  00012e80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00007f3f  00000000  00000000  00013520  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0001b45f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000fc  00000000  00000000  0001b4b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080003e4 	.word	0x080003e4

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080003e4 	.word	0x080003e4

080001e8 <main>:
void config_exti(void);
void delay(unsigned long);
void EXTI0_IRQHandler(void);

int main(void)
{
 80001e8:	b580      	push	{r7, lr}
 80001ea:	af00      	add	r7, sp, #0
	config_rcc_gpio();  // Configure GPIO & RCC Registers
 80001ec:	f000 f804 	bl	80001f8 <config_rcc_gpio>
	config_exti();      // Configure EXTI (External Interrupt) Registers
 80001f0:	f000 f84e 	bl	8000290 <config_exti>

	for(;;);
 80001f4:	e7fe      	b.n	80001f4 <main+0xc>
	...

080001f8 <config_rcc_gpio>:
}

void config_rcc_gpio(void)
{
 80001f8:	b480      	push	{r7}
 80001fa:	af00      	add	r7, sp, #0
	*APB2ENR_p |= (1 << 14);                          // SYSCFG Clock Enable
 80001fc:	4b13      	ldr	r3, [pc, #76]	; (800024c <config_rcc_gpio+0x54>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a12      	ldr	r2, [pc, #72]	; (800024c <config_rcc_gpio+0x54>)
 8000202:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000206:	6013      	str	r3, [r2, #0]

	*AHB1ENR_p |= (1 << 0);                           // GPIOA Clock Enabled
 8000208:	4b11      	ldr	r3, [pc, #68]	; (8000250 <config_rcc_gpio+0x58>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a10      	ldr	r2, [pc, #64]	; (8000250 <config_rcc_gpio+0x58>)
 800020e:	f043 0301 	orr.w	r3, r3, #1
 8000212:	6013      	str	r3, [r2, #0]
	*GPIOA_MODER_p &= ~(0x03 << 0);                   // GPIOA PA0 - Input
 8000214:	4b0f      	ldr	r3, [pc, #60]	; (8000254 <config_rcc_gpio+0x5c>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a0e      	ldr	r2, [pc, #56]	; (8000254 <config_rcc_gpio+0x5c>)
 800021a:	f023 0303 	bic.w	r3, r3, #3
 800021e:	6013      	str	r3, [r2, #0]

	*AHB1ENR_p |= (1 << 3);                           // GPIOD Clock Enabled
 8000220:	4b0b      	ldr	r3, [pc, #44]	; (8000250 <config_rcc_gpio+0x58>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a0a      	ldr	r2, [pc, #40]	; (8000250 <config_rcc_gpio+0x58>)
 8000226:	f043 0308 	orr.w	r3, r3, #8
 800022a:	6013      	str	r3, [r2, #0]
	*GPIOD_MODER_p &= ~(0x03 << 24) & ~(0x03 << 26);  // GPIOD - PD12, PD13 - RESET
 800022c:	4b0a      	ldr	r3, [pc, #40]	; (8000258 <config_rcc_gpio+0x60>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a09      	ldr	r2, [pc, #36]	; (8000258 <config_rcc_gpio+0x60>)
 8000232:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8000236:	6013      	str	r3, [r2, #0]
	*GPIOD_MODER_p |=  (0x01 << 24) | (0x01 << 26);   // GPIOD - PD12, PD13 - Output
 8000238:	4b07      	ldr	r3, [pc, #28]	; (8000258 <config_rcc_gpio+0x60>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a06      	ldr	r2, [pc, #24]	; (8000258 <config_rcc_gpio+0x60>)
 800023e:	f043 63a0 	orr.w	r3, r3, #83886080	; 0x5000000
 8000242:	6013      	str	r3, [r2, #0]
}
 8000244:	bf00      	nop
 8000246:	46bd      	mov	sp, r7
 8000248:	bc80      	pop	{r7}
 800024a:	4770      	bx	lr
 800024c:	40023844 	.word	0x40023844
 8000250:	40023830 	.word	0x40023830
 8000254:	40020000 	.word	0x40020000
 8000258:	40020c00 	.word	0x40020c00

0800025c <config_scr>:

void config_scr(void)
{
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0
	*SCR_p |=  (1 << 2); // SLEEPDEEP   : 1 - Select DEEPSLEEP Mode
 8000260:	4b0a      	ldr	r3, [pc, #40]	; (800028c <config_scr+0x30>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	4a09      	ldr	r2, [pc, #36]	; (800028c <config_scr+0x30>)
 8000266:	f043 0304 	orr.w	r3, r3, #4
 800026a:	6013      	str	r3, [r2, #0]
	*SCR_p &= ~(1 << 4); // SEVONPEND   : 0 - Only enabled interrupts or events can wake-up the processor
 800026c:	4b07      	ldr	r3, [pc, #28]	; (800028c <config_scr+0x30>)
 800026e:	681b      	ldr	r3, [r3, #0]
 8000270:	4a06      	ldr	r2, [pc, #24]	; (800028c <config_scr+0x30>)
 8000272:	f023 0310 	bic.w	r3, r3, #16
 8000276:	6013      	str	r3, [r2, #0]
	*SCR_p |=  (1 << 1); // SLEEPONEXIT : 1 - Enter Sleep Mode
 8000278:	4b04      	ldr	r3, [pc, #16]	; (800028c <config_scr+0x30>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	4a03      	ldr	r2, [pc, #12]	; (800028c <config_scr+0x30>)
 800027e:	f043 0302 	orr.w	r3, r3, #2
 8000282:	6013      	str	r3, [r2, #0]
}
 8000284:	bf00      	nop
 8000286:	46bd      	mov	sp, r7
 8000288:	bc80      	pop	{r7}
 800028a:	4770      	bx	lr
 800028c:	e000ed10 	.word	0xe000ed10

08000290 <config_exti>:

void config_exti(void)
{
 8000290:	b480      	push	{r7}
 8000292:	af00      	add	r7, sp, #0
	*EXTICR1_p &= ~(0x0F << 0);  // EXTI0 - PA0
 8000294:	4b0d      	ldr	r3, [pc, #52]	; (80002cc <config_exti+0x3c>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	4a0c      	ldr	r2, [pc, #48]	; (80002cc <config_exti+0x3c>)
 800029a:	f023 030f 	bic.w	r3, r3, #15
 800029e:	6013      	str	r3, [r2, #0]
	*IMR_p |=  (1 << 0);         // EXTI0 Mask Disabled
 80002a0:	4b0b      	ldr	r3, [pc, #44]	; (80002d0 <config_exti+0x40>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	4a0a      	ldr	r2, [pc, #40]	; (80002d0 <config_exti+0x40>)
 80002a6:	f043 0301 	orr.w	r3, r3, #1
 80002aa:	6013      	str	r3, [r2, #0]
	*EDGECTRL_p |= ( 1 << 0);    // EXTI0 Edge Control
 80002ac:	4b09      	ldr	r3, [pc, #36]	; (80002d4 <config_exti+0x44>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	4a08      	ldr	r2, [pc, #32]	; (80002d4 <config_exti+0x44>)
 80002b2:	f043 0301 	orr.w	r3, r3, #1
 80002b6:	6013      	str	r3, [r2, #0]
	*NVICIRQEN_p |= (1 << 6);    // NVIC IRQ Enable for EXTI0 (6)
 80002b8:	4b07      	ldr	r3, [pc, #28]	; (80002d8 <config_exti+0x48>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	4a06      	ldr	r2, [pc, #24]	; (80002d8 <config_exti+0x48>)
 80002be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80002c2:	6013      	str	r3, [r2, #0]
}
 80002c4:	bf00      	nop
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr
 80002cc:	40013808 	.word	0x40013808
 80002d0:	40013c00 	.word	0x40013c00
 80002d4:	40013c08 	.word	0x40013c08
 80002d8:	e000e100 	.word	0xe000e100

080002dc <delay>:

void delay(unsigned long _del)
{
 80002dc:	b480      	push	{r7}
 80002de:	b085      	sub	sp, #20
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	6078      	str	r0, [r7, #4]
	unsigned long i = _del * 2000;
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 80002ea:	fb02 f303 	mul.w	r3, r2, r3
 80002ee:	60fb      	str	r3, [r7, #12]
	while((i--) > 1);
 80002f0:	bf00      	nop
 80002f2:	68fb      	ldr	r3, [r7, #12]
 80002f4:	1e5a      	subs	r2, r3, #1
 80002f6:	60fa      	str	r2, [r7, #12]
 80002f8:	2b01      	cmp	r3, #1
 80002fa:	d8fa      	bhi.n	80002f2 <delay+0x16>
}
 80002fc:	bf00      	nop
 80002fe:	bf00      	nop
 8000300:	3714      	adds	r7, #20
 8000302:	46bd      	mov	sp, r7
 8000304:	bc80      	pop	{r7}
 8000306:	4770      	bx	lr

08000308 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler(void) // 6th Interrupt Source
{
 8000308:	b580      	push	{r7, lr}
 800030a:	af00      	add	r7, sp, #0
	*GPIOD_ODR_p |= (1 << 12) | (1 << 13);     // LEDs ON
 800030c:	4b0c      	ldr	r3, [pc, #48]	; (8000340 <EXTI0_IRQHandler+0x38>)
 800030e:	681b      	ldr	r3, [r3, #0]
 8000310:	4a0b      	ldr	r2, [pc, #44]	; (8000340 <EXTI0_IRQHandler+0x38>)
 8000312:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8000316:	6013      	str	r3, [r2, #0]
	delay(4000);
 8000318:	f44f 607a 	mov.w	r0, #4000	; 0xfa0
 800031c:	f7ff ffde 	bl	80002dc <delay>
	*GPIOD_ODR_p &= ~(1 << 12) & ~(1 << 13);   // LEDs OFF
 8000320:	4b07      	ldr	r3, [pc, #28]	; (8000340 <EXTI0_IRQHandler+0x38>)
 8000322:	681b      	ldr	r3, [r3, #0]
 8000324:	4a06      	ldr	r2, [pc, #24]	; (8000340 <EXTI0_IRQHandler+0x38>)
 8000326:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800032a:	6013      	str	r3, [r2, #0]

	config_scr();                              // Enter Deep Sleep Mode
 800032c:	f7ff ff96 	bl	800025c <config_scr>
	*EXTIPENDR_p |= (1 << 0);                  // Clear EXTI0 Interrupt Pending Bit
 8000330:	4b04      	ldr	r3, [pc, #16]	; (8000344 <EXTI0_IRQHandler+0x3c>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	4a03      	ldr	r2, [pc, #12]	; (8000344 <EXTI0_IRQHandler+0x3c>)
 8000336:	f043 0301 	orr.w	r3, r3, #1
 800033a:	6013      	str	r3, [r2, #0]
}
 800033c:	bf00      	nop
 800033e:	bd80      	pop	{r7, pc}
 8000340:	40020c14 	.word	0x40020c14
 8000344:	40013c14 	.word	0x40013c14

08000348 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000348:	480d      	ldr	r0, [pc, #52]	; (8000380 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800034a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800034c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000350:	480c      	ldr	r0, [pc, #48]	; (8000384 <LoopForever+0x6>)
  ldr r1, =_edata
 8000352:	490d      	ldr	r1, [pc, #52]	; (8000388 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000354:	4a0d      	ldr	r2, [pc, #52]	; (800038c <LoopForever+0xe>)
  movs r3, #0
 8000356:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000358:	e002      	b.n	8000360 <LoopCopyDataInit>

0800035a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800035a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800035c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800035e:	3304      	adds	r3, #4

08000360 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000360:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000362:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000364:	d3f9      	bcc.n	800035a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000366:	4a0a      	ldr	r2, [pc, #40]	; (8000390 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000368:	4c0a      	ldr	r4, [pc, #40]	; (8000394 <LoopForever+0x16>)
  movs r3, #0
 800036a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800036c:	e001      	b.n	8000372 <LoopFillZerobss>

0800036e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800036e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000370:	3204      	adds	r2, #4

08000372 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000372:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000374:	d3fb      	bcc.n	800036e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000376:	f000 f811 	bl	800039c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800037a:	f7ff ff35 	bl	80001e8 <main>

0800037e <LoopForever>:

LoopForever:
    b LoopForever
 800037e:	e7fe      	b.n	800037e <LoopForever>
  ldr   r0, =_estack
 8000380:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000384:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000388:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800038c:	08000404 	.word	0x08000404
  ldr r2, =_sbss
 8000390:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000394:	2000001c 	.word	0x2000001c

08000398 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000398:	e7fe      	b.n	8000398 <ADC_IRQHandler>
	...

0800039c <__libc_init_array>:
 800039c:	b570      	push	{r4, r5, r6, lr}
 800039e:	4d0d      	ldr	r5, [pc, #52]	; (80003d4 <__libc_init_array+0x38>)
 80003a0:	4c0d      	ldr	r4, [pc, #52]	; (80003d8 <__libc_init_array+0x3c>)
 80003a2:	1b64      	subs	r4, r4, r5
 80003a4:	10a4      	asrs	r4, r4, #2
 80003a6:	2600      	movs	r6, #0
 80003a8:	42a6      	cmp	r6, r4
 80003aa:	d109      	bne.n	80003c0 <__libc_init_array+0x24>
 80003ac:	4d0b      	ldr	r5, [pc, #44]	; (80003dc <__libc_init_array+0x40>)
 80003ae:	4c0c      	ldr	r4, [pc, #48]	; (80003e0 <__libc_init_array+0x44>)
 80003b0:	f000 f818 	bl	80003e4 <_init>
 80003b4:	1b64      	subs	r4, r4, r5
 80003b6:	10a4      	asrs	r4, r4, #2
 80003b8:	2600      	movs	r6, #0
 80003ba:	42a6      	cmp	r6, r4
 80003bc:	d105      	bne.n	80003ca <__libc_init_array+0x2e>
 80003be:	bd70      	pop	{r4, r5, r6, pc}
 80003c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c4:	4798      	blx	r3
 80003c6:	3601      	adds	r6, #1
 80003c8:	e7ee      	b.n	80003a8 <__libc_init_array+0xc>
 80003ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80003ce:	4798      	blx	r3
 80003d0:	3601      	adds	r6, #1
 80003d2:	e7f2      	b.n	80003ba <__libc_init_array+0x1e>
 80003d4:	080003fc 	.word	0x080003fc
 80003d8:	080003fc 	.word	0x080003fc
 80003dc:	080003fc 	.word	0x080003fc
 80003e0:	08000400 	.word	0x08000400

080003e4 <_init>:
 80003e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003e6:	bf00      	nop
 80003e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ea:	bc08      	pop	{r3}
 80003ec:	469e      	mov	lr, r3
 80003ee:	4770      	bx	lr

080003f0 <_fini>:
 80003f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003f2:	bf00      	nop
 80003f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003f6:	bc08      	pop	{r3}
 80003f8:	469e      	mov	lr, r3
 80003fa:	4770      	bx	lr
